/* libh2o++ -- steam & water properties
 * (c) 2012 Michał Górny
 * Released under the terms of the 2-clause BSD license
 */

#pragma once

#ifndef _H2O_HXX
#define _H2O_HXX 1

namespace h2o
{
	namespace internals
	{
#		include <h2o/boundaries.h>
	}

	class Region
	{
	public:
		typedef enum
		{
			OOR,
			R1,
			R2,
			R3,
			R4,
			R5
		} enum_type;

	private:
		enum_type _val;

	public:
		Region(enum_type val = OOR);
		Region(enum internals::h2o_region val);

		operator enum_type() const;
	};

	class H2O
	{
		double _arg1, _arg2;
		Region _region;

	public:
		H2O();
		H2O(double p, double T);
		static H2O pT(double p, double T);
		static H2O Tx(double T, double x);
		static H2O px(double p, double x);
		static H2O ph(double p, double h);
		static H2O ps(double p, double s);
		static H2O hs(double h, double s);
		static H2O rhoT(double rho, double T);

		Region region() const;

		double p() const;
		double T() const;
		double x() const;
		double rho() const;

		double v() const;
		double u() const;
		double h() const;
		double s() const;

		H2O expand(double pout) const;
		H2O expand(double pout, double eta) const;
	};
}

#endif /*_H2O_HXX*/

// vim:syn=cpp
